Revision history
 -V0.01 Whiteboard edition (23 May)
 -V0.1  This TXT edition (25 May)
 

We agree to use the following implementation of the market as the interface.

The current on that is:

from tribler/Tribler/community/market/community.py

Division of responsibility: the market is fully responsible for the exchange of funds and management of the wallets of both Multi-chain, Bitcoin.

# Create a bid.
def create_bid(self, price, quantity, timeout):
        """
        Create a bid order (buy order)
        :param price: The price for the order in Bitcoin
        :param quantity: The quantity of the order in MultiChain
        :param timeout: The timeout of the order in seconds, when does the order need to be timed out
        :type price: float
        :type quantity: float
        :type timeout: float
        """

# Create an ask.
def create_ask(self, price, quantity, timeout):
        """
        Create an ask order (sell order)
        :param price: The price for the order in Bitcoin
        :param quantity: The quantity of the order in MultiChain
        :param timeout: The timeout of the order in seconds, when does the order need to be timed out
        :type price: float
        :type quantity: float
        :type timeout: float
        """

def success_callback()
        """
        A bid has been accepted and funds have been received in the wallet.
        

def error_callback()
        """
        Something went wrong. A detailed description is included within this callback 


These two functions don't give anything as output, neither information nor errors.
The above code works under the assumption that electrum is properly installed and configured on the machine that calls these functions.
